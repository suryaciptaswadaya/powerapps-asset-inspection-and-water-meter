scr_LocationSelectorScreen As screen:
    OnVisible: |+
        =Set(b_LSConfirmationSubmitReport,false);
        Set(b_LSConfirmationRecheckReport,false);
        Set(b_LSConfirmationApproveReport,false);
        Set(b_LSStartTask,If(IsBlank(gal_TSTaskList.Selected.start_time_task),true,false));
        Set(dm_LSTask,If(IsBlank(gal_TSTaskList.Selected.start_time_task),DisplayMode.Disabled,DisplayMode.Edit));
        Set(b_LSNeedRepair,false);
        
        /*If(gal_TSTaskList.Selected.status_code = Text(n_WaitingGMApprovalStatus)|| gal_TSTaskList.Selected.status_code = Text(n_NeedMoreAttention) || gal_TSTaskList.Selected.status_code = Text(n_ReadyForSale),
            ClearCollect(c_TaskComment,Filter(tbl_assignment_sublocation_comment, assignment_header_id = gal_TSTaskList.Selected.ID))
        ,
            ""
        )*/
        

    "gal_LSSSublocationList As gallery.'BrowseLayout_Vertical_TwoTextOneImageTwoColumnOverlayVariant_ver4.0'":
        DelayItemLoading: =true
        DisplayMode: =dm_LSTask
        Height: =If(b_IsApproverByFlow || b_IsViewerUser, 868, 928)
        Items: =c_SubLocation
        Layout: =Layout.Vertical
        LoadingSpinner: =LoadingSpinner.Data
        OnSelect: =
        ShowScrollbar: =false
        TemplatePadding: =20
        TemplateSize: =Min(320, Self.Height - 60)
        Width: =599
        WrapCount: =2
        X: =20
        Y: =If(b_IsApproverByFlow || b_IsViewerUser, 142, 82)
        ZIndex: =2

        img_LSSPreview As image:
            Height: =285
            Image: |-
                =//ThisItem.img_url
                LookUp(gal_sublocation_photos, ID = ThisItem.img_id, Thumbnail.Large)
            ImagePosition: =ImagePosition.Fill
            OnSelect: =Select(Parent)
            Width: =Parent.TemplateWidth
            ZIndex: =1

        shp_LSSOverlay As rectangle:
            Height: =99
            OnSelect: =Select(Parent)
            Width: =Parent.TemplateWidth
            Y: =186
            ZIndex: =2

        lbl_LSSSublocationName As label:
            Align: =Align.Center
            Height: =99
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Text: =ThisItem.sublocation_name //& " - " & ThisItem.ID & " - " & n_TmpHeaderID
            Width: =269
            Y: =186
            ZIndex: =3

        shp_LSWarning As rectangle:
            Fill: =RGBA(255, 255, 255, 1)
            Height: =80
            OnSelect: =Select(Parent)
            Visible: |-
                =//ico_LSWarning.Visible
                false
            Width: =85
            X: =179
            Y: =10
            ZIndex: =4

        ico_LSWarning As icon.Error:
            Color: =RGBA(255, 0, 0, 1)
            Icon: =Icon.Error
            OnSelect: =Select(Parent)
            Visible: |-
                =/*If(b_IsApproverByFlow,
                    !IsBlank(First(Filter(tbl_assignment_sublocation_comment, sublocation_id = ThisItem.ID && assignment_header_id = n_TmpHeaderID)).comment)
                ,
                    !IsBlank(First(Filter(tbl_assignment_sublocation_comment, sublocation_id = ThisItem.ID && assignment_header_id = gal_TSTaskList.Selected.ID)).comment)
                )*/
                false
            X: =190
            Y: =18
            ZIndex: =5

        btn_LSSOnSelectHandler As button:
            Fill: =RGBA(0, 0, 0, 0)
            Height: =320
            HoverFill: =Color.Transparent
            OnSelect: |-
                =Select(Parent);
                Set(s_SelectedSublocation, gal_LSSSublocationList.Selected.sublocation_name);
                Set(n_CurrentSublocationRowNumber, gal_LSSSublocationList.Selected.RowNumber);
                Set(n_CurrentSublocationID, ThisItem.ID);
                Set(n_CurrentSublocationDepartmentID, ThisItem.department_id);
                
                ClearCollect(c_TmpAssignmentDetailAmenities, Filter(c_AssignmentDetail, sublocation_id = gal_LSSSublocationList.Selected.ID));
                //Generate Row Number
                ClearCollect(
                    c_AssignmentDetailAmenities,
                    ForAll(
                        Sequence(CountRows(c_TmpAssignmentDetailAmenities)),
                        Patch(
                            Last(FirstN(c_TmpAssignmentDetailAmenities, Value)),
                            { RowNumber : Value }
                        )
                    )
                );
                Clear(c_TmpAssignmentDetailAmenities);
                
                If(First(c_ActiveUserData).is_approver = 1,
                Set(s_ApproverComment, First(
                    Filter(
                        tbl_assignment_sublocation_data,
                        sublocation_id = n_CurrentSublocationID && assignment_header_id = n_TmpHeaderID
                    )
                ).comment)
                ,
                Set(s_ApproverComment, First(
                    Filter(
                        tbl_assignment_sublocation_data,
                        sublocation_id = n_CurrentSublocationID && assignment_header_id = gal_TSTaskList.Selected.ID
                    )
                ).comment);
                );
                
                //Notify(n_CurrentSublocationID & " " & n_TmpHeaderID );
                
                If(!IsBlank(s_ApproverComment),Set(b_showComment,true),Set(b_showComment,false));
                
                Navigate(scr_TaskReportScreen);
            Size: =24
            Text: =""
            Width: =269.5
            ZIndex: =6

        Image1 As image:
            Height: =64
            Image: =warning
            OnSelect: =Select(Parent)
            Visible: |-
                =/*If(b_IsApproverByFlow,
                    !IsBlank(First(Filter(tbl_assignment_sublocation_comment, sublocation_id = ThisItem.ID && assignment_header_id = n_TmpHeaderID)).comment)
                ,
                    !IsBlank(First(Filter(tbl_assignment_sublocation_comment, sublocation_id = ThisItem.ID && assignment_header_id = gal_TSTaskList.Selected.ID)).comment)
                )*/
                /*If(CountRows(Filter(c_AssignmentDetail, assignment_header_id = gal_TSTaskList.Selected.ID && (IsBlank(is_ok) || is_ok = 0))) > 0,
                    //Notify("Mohon pastikan seluruh data tercatat sebagai 'OK'");
                    Collect(c_ReportDataNotComplete, AddColumns(Filter(c_AssignmentDetail, assignment_header_id = gal_TSTaskList.Selected.ID && (IsBlank(is_ok) || is_ok = 0)), "reason", "Data belum tercatat sebagai OK"));
                    Set(b_Continue, false);    
                );*/
                
                If(b_IsShowWarningIcon,
                    If(b_IsApproverByFlow,
                        If(
                            CountRows(Filter(c_AssignmentDetail, assignment_header_id = n_TmpHeaderID && (IsBlank(is_ok) || is_ok = 0) && sublocation_id = ThisItem.ID)) > 0,true,false)
                            ,
                        If(
                            CountRows(Filter(c_AssignmentDetail, assignment_header_id = gal_TSTaskList.Selected.ID && (IsBlank(is_ok) || is_ok = 0) && sublocation_id = ThisItem.ID)) > 0,true,false)
                    )
                ,
                    false
                )
            Width: =62.5
            X: =207
            ZIndex: =7

    cmp_LSAppBar_top As cmp_MD_AppBar_top:
        onSelectIcon1: =Back();
        onSelectIcon2: =Navigate(scr_NotificationScreen);
        svgIcon1: |-
            ="<svg width='11px' height='20px' viewBox='0 0 11 20' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'>
                <!-- Generator: Sketch 52.5 (67469) - http://www.bohemiancoding.com/sketch -->
                <title>arrow_back_ios</title>
                <desc>Created with Sketch.</desc>
                <g id='Icons' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'>
                    <g id='Rounded' transform='translate(-548.000000, -3434.000000)'>
                        <g id='Navigation' transform='translate(100.000000, 3378.000000)'>
                            <g id='-Round-/-Navigation-/-arrow_back_ios' transform='translate(442.000000, 54.000000)'>
                                <g>
                                    <polygon id='Path' opacity='0.87' points='0 0 24 0 24 24 0 24'></polygon>
                                    <path d='M16.62,2.99 C16.13,2.5 15.34,2.5 14.85,2.99 L6.54,11.3 C6.15,11.69 6.15,12.32 6.54,12.71 L14.85,21.02 C15.34,21.51 16.13,21.51 16.62,21.02 C17.11,20.53 17.11,19.74 16.62,19.25 L9.38,12 L16.63,4.75 C17.11,4.27 17.11,3.47 16.62,2.99 Z' id='ðŸ”¹-Icon-Color' fill='#ffff'></path>
                                </g>
                            </g>
                        </g>
                    </g>
                </g>
            </svg>"
        svgIcon2: |-
            ="<svg xmlns='http://www.w3.org/2000/svg' height='24' width='24'><path d='M21,19V20H3V19L5,17V11C5,7.9 7.03,5.17 10,4.29C10,4.19 10,4.1 10,4A2,2 0 0,1 12,2A2,2 0 0,1 14,4C14,4.1 14,4.19 14,4.29C16.97,5.17 19,7.9 19,11V17L21,19M14,21A2,2 0 0,1 12,23A2,2 0 0,1 10,21'/></svg>"
        svgIcon3: =""
        svgIcon4: =""
        titleText: =gal_TSTaskList.Selected.location_name //&" "&gal_TSTaskList.Selected.ID
        tooltipIcon1: ="Kembali"
        tooltipIcon2: ="Notifikasi"
        tooltipIcon3: =""
        tooltipIcon4: =""
        ZIndex: =3

    btn_LSSSubmitReport As button:
        Fill: =RGBA(33, 86, 117, 1)
        Height: =50
        OnSelect: |
            =Set(b_Continue, true);
            Set(d_LSS_DateNow,Now());
            Set(b_LSCMandatoryPIC ,First(Filter(c_AllFlowProcess,sequence_number = gal_TSTaskList.Selected.sequence_number)).is_pic_mandatory);
            Set(b_LSCMandatoryPhoto ,First(Filter(c_AllFlowProcess,sequence_number = gal_TSTaskList.Selected.sequence_number)).is_photo_mandatory);
            Clear(c_ReportDataNotComplete);
            
            If(CountRows(Filter(c_AssignmentDetail, assignment_header_id = gal_TSTaskList.Selected.ID && (IsBlank(is_ok) || is_ok = 0))) > 0,
                //Notify("Mohon pastikan seluruh data tercatat sebagai 'OK'");
                Collect(c_ReportDataNotComplete, AddColumns(Filter(c_AssignmentDetail, assignment_header_id = gal_TSTaskList.Selected.ID && (IsBlank(is_ok) || is_ok = 0)), "reason", "Data belum tercatat sebagai OK"));
                Set(b_Continue, false);    
            );
            
            If(b_LSCMandatoryPIC = 1,
                If(CountRows(Filter(c_AssignmentDetail, assignment_header_id = gal_TSTaskList.Selected.ID && IsBlank(staff_id))) > 0,
                    Collect(c_ReportDataNotComplete, AddColumns(Filter(c_AssignmentDetail, assignment_header_id = gal_TSTaskList.Selected.ID && IsBlank(staff_id)), "reason", "PIC Data belum terpilih"));
                    //Notify("Mohon pastikan seluruh pekerjaan sudah terpilih PIC nya");
                    Set(b_Continue, false);    
                );    
            );
            
            If(b_LSCMandatoryPhoto = 1,
                If(CountRows(Filter(c_AssignmentDetail, assignment_header_id = gal_TSTaskList.Selected.ID && IsBlank(is_photo_uploaded))) > 0,
                    Collect(c_ReportDataNotComplete, AddColumns(Filter(c_AssignmentDetail, assignment_header_id = gal_TSTaskList.Selected.ID && IsBlank(is_photo_uploaded)), "reason", "Foto belum terpilih"));
                    //Notify("Mohon pastikan seluruh pekerjaan sudah terpilih PIC nya");
                    Set(b_Continue, false);    
                );    
            );
            
            
            If(b_Continue,
                Set(b_LSConfirmationSubmitReport,true);
                Set(b_IsShowWarningIcon, false);
            ,
                Set(b_PopupNotComplete, true);
                Set(b_IsShowWarningIcon, true);
            );
        RadiusBottomLeft: =0
        RadiusBottomRight: =0
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Size: =24
        Text: |-
            =//"Simpan Laporan"
            First(Filter(c_AllStatus,status_sequence_number = gal_TSTaskList.Selected.status_sequence_number + 1)).status_name
        Visible: |-
            =/*If(
                gal_TSTaskList.Selected.status_code <> Text(n_WaitingGMApprovalStatus) && gal_TSTaskList.Selected.status_code <> Text(n_ReadyForSale) && gal_TSTaskList.Selected.assigned_pic1_id = First(c_ActiveUserData).ID,
                true,
                If(
                    First(c_ActiveUserData).is_approver = 1,
                    false,
                    false
                )
            )*/
            /*If(
                First(c_ActiveUserData).is_approver = 1,
                false,
                If(
                    gal_TSTaskList.Selected.status_code <> Text(n_WaitingGMApprovalStatus),
                    true
                )
            )*/
            If(
                First(c_ActiveUserData).is_approver = 1 || b_IsViewerUser,
                false,
                If(IsBlank(gal_TSTaskList.Selected.end_time_task),true,false)
            )
        Width: =560
        X: =39
        Y: =1035
        ZIndex: =4

    btn_LSRecheck As button:
        Fill: =RGBA(246, 88, 16, 1)
        Height: =50
        OnSelect: =Set(b_LSConfirmationRecheckReport,true);
        Size: =20
        Text: ="Recheck"
        Visible: =btn_LSApprove.Visible
        Width: =250
        X: =39
        Y: =1052
        ZIndex: =5

    btn_LSApprove As button:
        DisplayMode: |-
            =//If(b_LSNeedRepair = true,DisplayMode.Disabled,DisplayMode.Edit)
            DisplayMode.Edit
        Fill: =RGBA(141, 198, 63, 1)
        Height: =50
        OnSelect: |+
            =Set(b_Continue, true);
            
            If(CountRows(Filter(c_AssignmentDetail, assignment_header_id = n_TmpHeaderID && (IsBlank(is_ok) || is_ok = 0))) > 0,    
                Set(b_LSNeedRepair, true);  ,
                Set(b_LSNeedRepair, false);  
            );
            
            If(b_LSNeedRepair = true,
                Set(b_LSNeedRepair, true);
                Set(b_Continue, false);
                ,
                If(CountRows(Filter(c_AssignmentDetailAmenities, assignment_header_id = n_TmpHeaderID && (IsBlank(is_ok) || is_ok = 0))) > 0,    
                    Set(b_LSNeedRepair, true);
                    Set(b_Continue, false);
                    ,
                    Set(b_LSNeedRepair, false) 
                )
            );
            
            
            
            
            If(b_Continue,
                Set(b_LSConfirmationApproveReport,true);
                Set(b_IsShowWarningIcon, false);
            ,
                Notify("Silahkan cek pekerjaan yang belum OK");
                Set(b_IsShowWarningIcon, true);
            );
            
            
            
            
        Size: =20
        Text: ="Ready to Sell"
        Visible: |-
            =//If(gal_TSTaskList.Selected.status_code <> Text(n_WaitingGMApprovalStatus),false,If(First(c_ActiveUserData).is_approver = 1,true,false))
            //b_ShowRecheckApproveButton
            !btn_LSSNextTask.Visible && If(b_IsApproverByFlow && (gal_TSTaskList_1.Selected.counted_task_complete  <> gal_TSTaskList_1.Selected.counted_all_flow_for_gm),true,false) && !b_IsViewerUser
        Width: =250
        X: =349
        Y: =1052
        ZIndex: =6

    grp_ConfirmationSubmitReport As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =13

        Rectangle2 As rectangle:
            Fill: =RGBA(0, 0, 0, 0.5)
            Height: =1136
            Visible: =b_LSConfirmationSubmitReport
            Width: =640
            ZIndex: =7

        Rectangle3 As rectangle:
            Fill: =RGBA(255, 255, 255, 1)
            Height: =447
            Visible: =b_LSConfirmationSubmitReport
            Width: =535
            X: =51
            Y: =303
            ZIndex: =8

        Label3 As label:
            Align: =Align.Center
            FontWeight: =FontWeight.Semibold
            Height: =70
            Size: =21
            Text: ="Mohon Konfirmasi"
            Visible: =b_LSConfirmationSubmitReport
            Width: =342
            X: =147
            Y: =338
            ZIndex: =9

        Label4 As label:
            Align: =Align.Center
            Height: =119
            Size: =21
            Text: ="Pekerjaan akan disimpan, anda tidak akan dapat melakukan perubahan kembali."
            Visible: =b_LSConfirmationSubmitReport
            Width: =427
            X: =106
            Y: =408
            ZIndex: =10

        Button2 As button:
            Fill: =RGBA(246, 88, 16, 1)
            Height: =50
            OnSelect: =Set(b_LSConfirmationSubmitReport,false);
            Size: =24
            Text: ="Kembali"
            Visible: =b_LSConfirmationSubmitReport
            Width: =200
            X: =106
            Y: =641
            ZIndex: =11

        Button2_1 As button:
            Fill: =RGBA(152, 208, 70, 1)
            Height: =50
            OnSelect: |-
                =Set(b_Continue,true);
                
                Set(n_LSCStatusSequenceNumberCurrent,gal_TSTaskList.Selected.status_sequence_number);
                Set(n_LSCStatusSequenceNumberNext,(gal_TSTaskList.Selected.status_sequence_number + 1));
                
                //TO DO Check to new Photo Function
                /*If(b_LSCMandatoryPhoto = 1,
                    If(CountRows(Filter(c_AssignmentDetail, assignment_header_id = gal_TSTaskList.Selected.ID &&( IsBlank(url_photo_before) || IsBlank(url_photo_after))) )> 0,
                            Notify("Mohon pastikan seluruh pekerjaan sudah terpilih Gambarnya nya");
                            Set(b_Continue, false);    
                        );
                );*/
                
                If(b_Continue,
                
                ForAll(
                    c_AllFlowProcess,
                
                    If(gal_TSTaskList.Selected.sequence_number = c_AllFlowProcess[@sequence_number],
                
                        Patch(tbl_assignment_headers,
                            First(Filter(tbl_assignment_headers,
                                assignment_code = gal_TSTaskList.Selected.assignment_code,
                                sequence_number = c_AllFlowProcess[@sequence_number]                
                            )),
                            {
                                status_code: First(Filter(c_AllStatus,status_sequence_number = n_LSCStatusSequenceNumberNext)).status_code,
                                status_sequence_number : n_LSCStatusSequenceNumberNext,
                                end_time_task:Now()
                            }
                        );
                        Patch(c_Task, 
                            {
                                assignment_code : gal_TSTaskList.Selected.assignment_code,
                                sequence_number : c_AllFlowProcess[@sequence_number]
                            }, 
                            {
                                status_sequence_number : n_LSCStatusSequenceNumberNext,
                                status_code:First(Filter(c_AllStatus,status_sequence_number = n_LSCStatusSequenceNumberNext)).status_code,
                                status_name: First(Filter(c_AllStatus,status_sequence_number = n_LSCStatusSequenceNumberNext)).status_name,
                                status_color:First(Filter(c_AllStatus,status_sequence_number = n_LSCStatusSequenceNumberNext)).hex_color,
                                end_time_task: Now()
                            }
                        );
                        ,
                        Patch(tbl_assignment_headers,
                            First(Filter(tbl_assignment_headers,
                                assignment_code = gal_TSTaskList.Selected.assignment_code,
                                sequence_number = c_AllFlowProcess[@sequence_number]                
                            )),
                            {
                                status_code: First(Filter(c_AllStatus,status_sequence_number = n_LSCStatusSequenceNumberNext)).status_code,
                                status_sequence_number : n_LSCStatusSequenceNumberNext
                            }
                        );
                        Patch(c_Task, 
                            {
                                assignment_code : gal_TSTaskList.Selected.assignment_code,
                                sequence_number : c_AllFlowProcess[@sequence_number]
                            }, 
                            {
                                status_sequence_number : n_LSCStatusSequenceNumberNext,
                                status_code:First(Filter(c_AllStatus,status_sequence_number = n_LSCStatusSequenceNumberNext)).status_code,
                                status_name: First(Filter(c_AllStatus,status_sequence_number = n_LSCStatusSequenceNumberNext)).status_name,
                                status_color:First(Filter(c_AllStatus,status_sequence_number = n_LSCStatusSequenceNumberNext)).hex_color
                            }
                        );
                    
                    );
                );
                    
                    //Gabisa pake cara ini nanti jadinya insert
                    /*Patch(tbl_assignment_headers, { ID : gal_TSTaskList.Selected.ID},
                        {status_code: n_WaitingGMApprovalStatus}
                    );*/    
                
                
                
                    //TO DO : Sent Notification to Approver
                    // bukan ke approver tetapi ke departement selanjutnya
                
                    /*ClearCollect(c_UserApprover, Filter(c_AllEmployee, department_id = n_DepartmentID && is_approver = 1));
                
                    ForAll(c_UserApprover,
                        Patch(tbl_notification_list, Defaults(tbl_notification_list), 
                        {
                            employee_id : c_UserApprover[@ID],
                            notification_preview : "Pekerjaan dengan kode : " & gal_TSTaskList.Selected.assignment_code & " telah selesai dikerjakan oleh " & First(c_ActiveUserData).name & ". Mohon review nya",
                            notification_content : "Pekerjaan dengan kode : " & gal_TSTaskList.Selected.assignment_code & " telah selesai dikerjakan oleh " & First(c_ActiveUserData).name & ". Mohon review nya",
                            notification_date : Now(),
                            is_read : 0
                        });
                
                        '[DEV]AssetMaintenance-SendPushNotification'.Run(c_UserApprover[@email], "Mohon Review Penugasan " & gal_TSTaskList.Selected.assignment_code);
                    );*/
                
                    //Get Current Process Number
                    Set(n_NextSequenceNumber, First(Filter(c_AllFlowProcess, process_id = gal_TSTaskList.Selected.process_id && department_id = First(c_ActiveUserData).department_id)).sequence_number + 1);
                    
                    //Get Next Process
                    ClearCollect(c_NextAssignmentHeader, Filter(tbl_assignment_headers, assignment_code = gal_TSTaskList.Selected.assignment_code && sequence_number = n_NextSequenceNumber && process_id = gal_TSTaskList.Selected.process_id));
                
                    //Update Next Process to be available
                    If(CountRows(c_NextAssignmentHeader) > 0,
                        Patch(tbl_assignment_headers, 
                            { 
                                ID : First(c_NextAssignmentHeader).ID, 
                                sequence_number: n_NextSequenceNumber
                            }, 
                            {                 
                                is_ready_to_start: 1,
                                comment:Blank()
                            }
                        );
                    );
                    
                    Set(n_NextDepartmentID, First(c_NextAssignmentHeader).department_id);
                    //Sent Notification to Next Process Division
                    //Apabila kosong, kirim ke level GM
                    ClearCollect(c_AllNextProcessEmployee, Filter(c_AllEmployee, department_id = n_NextDepartmentID && IsBlank(spv_id)));
                
                    If(IsEmpty(c_AllNextProcessEmployee),
                        ClearCollect(c_AllNextProcessEmployee, Filter(c_AllEmployee, entity_id = n_EntityID && is_approver = 1));
                        ForAll(c_AllNextProcessEmployee,
                            Patch(tbl_notification_list, Defaults(tbl_notification_list), 
                            {
                                employee_id : c_AllNextProcessEmployee[@ID],
                                notification_preview : "Tugas Baru - Verifikasi Pada Lokasi " & gal_TSTaskList.Selected.location_name ,
                                notification_content : "Tugas Baru - Verifikasi Pada Lokasi " & gal_TSTaskList.Selected.location_name,
                                notification_date : Now(),
                                is_read : 0
                            });
                
                            '[DEV]AssetMaintenance-SendPushNotification'.Run(c_AllNextProcessEmployee[@email], "Tugas Baru - Verifikasi Pada Lokasi " & gal_TSTaskList.Selected.location_name);
                        );
                    ,
                        ForAll(c_AllNextProcessEmployee,
                            Patch(tbl_notification_list, Defaults(tbl_notification_list), 
                            {
                                employee_id : c_AllNextProcessEmployee[@ID],
                                notification_preview : "Tugas Baru - General Cleaning Pada Lokasi " & gal_TSTaskList.Selected.location_name ,
                                notification_content : "Tugas Baru - General Cleaning Pada Lokasi " & gal_TSTaskList.Selected.location_name,
                                notification_date : Now(),
                                is_read : 0
                            });
                
                            '[DEV]AssetMaintenance-SendPushNotification'.Run(c_AllNextProcessEmployee[@email], "Tugas Baru - General Cleaning Pada Lokasi " & gal_TSTaskList.Selected.location_name);
                        );
                    );
                        
                    
                
                	Set(b_LSConfirmationSubmitReport,false);
                    Notify("Data berhasil disubmit.");
                    Navigate(scr_TaskScreen);
                    
                );
            Size: =24
            Text: ="Simpan"
            Visible: =b_LSConfirmationSubmitReport
            Width: =200
            X: =333
            Y: =641
            ZIndex: =12

    grp_ConfirmationRecheckReport As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =19

        Rectangle2_1 As rectangle:
            Fill: =RGBA(0, 0, 0, 0.5)
            Height: =1136
            Visible: =b_LSConfirmationRecheckReport
            Width: =640
            ZIndex: =13

        Rectangle3_1 As rectangle:
            Fill: =RGBA(255, 255, 255, 1)
            Height: =527
            Visible: =b_LSConfirmationRecheckReport
            Width: =535
            X: =51
            Y: =303
            ZIndex: =14

        Label3_1 As label:
            Align: =Align.Center
            FontWeight: =FontWeight.Semibold
            Height: =70
            Size: =21
            Text: ="Mohon Konfirmasi"
            Visible: =b_LSConfirmationRecheckReport
            Width: =342
            X: =147
            Y: =338
            ZIndex: =15

        Label4_1 As label:
            Align: =Align.Center
            Height: =119
            Size: =21
            Text: ="Apakah anda yakin pekerjaan ini akan dikembalikan untuk pengecekan ulang?"
            Visible: =b_LSConfirmationRecheckReport
            Width: =427
            X: =106
            Y: =428
            ZIndex: =16

        Button2_3 As button:
            Fill: =RGBA(246, 88, 16, 1)
            Height: =50
            OnSelect: =Set(b_LSConfirmationRecheckReport,false);
            Size: =24
            Text: ="Kembali"
            Visible: =b_LSConfirmationRecheckReport
            Width: =200
            X: =106
            Y: =705
            ZIndex: =17

        Button2_2 As button:
            Fill: =RGBA(152, 208, 70, 1)
            Height: =50
            OnSelect: |-
                =Set(b_SelectedRecheckStatus,true);
                If(
                    IsBlank(ComboBox2.Selected),
                    Notify("Pilih Status untuk Pengecekan Ulang");
                    Set(b_SelectedRecheckStatus,false);
                );
                
                If(b_SelectedRecheckStatus = true,
                    Set(n_BackToSequenceNumber,ComboBox2.Selected.status_sequence_number);
                    Set(n_LSSAssignmentCode, gal_TSTaskList_1.Selected.assignment_code);
                
                    Clear(c_AllNextProcessEmployee);
                    Clear(c_TaskNextProcess);  
                    Collect(c_TaskNextProcess,Filter(c_Task,assignment_code = n_LSSAssignmentCode,sequence_number > n_BackToSequenceNumber));
                    Collect(c_TaskPreviousProcess,Filter(c_Task,assignment_code = n_LSSAssignmentCode,sequence_number < n_BackToSequenceNumber));
                    
                    ForAll(c_TaskPreviousProcess,
                        Patch(c_Task, First(
                                Filter(c_Task,assignment_code = n_LSSAssignmentCode && sequence_number = c_TaskPreviousProcess[@sequence_number])
                            ),
                            {
                                status_code: ComboBox2.Selected.status_code,
                                status_name: ComboBox2.Selected.status_name,
                                status_color: ComboBox2.Selected.hex_color,
                                is_return:1,
                                status_sequence_number:ComboBox2.Selected.status_sequence_number
                            }
                        );
                
                        Patch(
                            tbl_assignment_headers,
                            First(
                                Filter(tbl_assignment_headers,assignment_code = n_LSSAssignmentCode && sequence_number = c_TaskPreviousProcess[@sequence_number])
                                ),
                            {
                                status_code: ComboBox2.Selected.status_code,
                                is_return:1,
                                status_sequence_number:ComboBox2.Selected.status_sequence_number
                            }
                        );        
                    );
                
                    ForAll(c_TaskNextProcess,
                        Patch(c_Task, First(
                                Filter(c_Task,assignment_code = n_LSSAssignmentCode && sequence_number = c_TaskNextProcess[@sequence_number])
                            ),
                            {
                                status_code: ComboBox2.Selected.status_code,
                                status_name: ComboBox2.Selected.status_name,
                                status_color: ComboBox2.Selected.hex_color,
                                end_time_task: Blank(),
                                is_ready_to_start:0,
                                is_return:1,
                                comment:Blank(),
                                status_sequence_number:ComboBox2.Selected.status_sequence_number
                            }
                        );
                
                        Patch(
                            tbl_assignment_headers,
                            First(
                                Filter(tbl_assignment_headers,assignment_code = n_LSSAssignmentCode && sequence_number = c_TaskNextProcess[@sequence_number])
                                ),
                            {
                                status_code: ComboBox2.Selected.status_code,
                                is_ready_to_start:0,
                                end_time_task: Blank(),
                                is_return:1,
                                comment:Blank(),
                                status_sequence_number:ComboBox2.Selected.status_sequence_number
                            }
                        );
                
                        Collect(c_AllNextProcessEmployee, Filter(c_AllEmployee, department_id = c_TaskNextProcess[@department_id] && IsBlank(spv_id)));
                        
                    );
                
                
                    ForAll(c_AllNextProcessEmployee,
                        Patch(tbl_notification_list, Defaults(tbl_notification_list), 
                        {
                            employee_id : c_AllNextProcessEmployee[@ID],
                            notification_preview : "Pekerjaan dengan kode : " & n_LSSAssignmentCode & " telah direview oleh " & First(c_ActiveUserData).name & ". Mohon melakukan pengecekan ulang untuk penugasan tersebut",
                            notification_content : "Pekerjaan dengan kode : " & n_LSSAssignmentCode & " telah direview oleh " & First(c_ActiveUserData).name & ". Mohon melakukan pengecekan ulang untuk penugasan tersebut",
                            notification_date : Now(),
                            is_read : 0
                        });
                
                        '[DEV]AssetMaintenance-SendPushNotification'.Run(c_AllNextProcessEmployee[@email], "Pekerjaan dengan kode : " & n_LSSAssignmentCode & " telah direview oleh " & First(c_ActiveUserData).name & ". Mohon melakukan pengecekan ulang untuk penugasan tersebut");
                    );
                
                    Patch(
                        tbl_assignment_headers,
                        First(
                            Filter(
                                tbl_assignment_headers,
                                assignment_code = n_LSSAssignmentCode,sequence_number = n_BackToSequenceNumber                
                            )
                        ),
                        {
                            status_code: ComboBox2.Selected.status_code,
                                is_ready_to_start:1,
                                is_return:1,
                                end_time_task: Blank(),
                                comment:Blank(),
                                status_sequence_number:ComboBox2.Selected.status_sequence_number
                        }
                    );
                
                    Patch(
                        c_Task,
                        First(
                            Filter(
                                c_Task,
                                assignment_code = n_LSSAssignmentCode,sequence_number = n_BackToSequenceNumber                
                            )
                        ),
                        {
                            status_code: ComboBox2.Selected.status_code,
                                status_name: ComboBox2.Selected.status_name,
                                status_color: ComboBox2.Selected.hex_color,
                                end_time_task: Blank(),
                                is_ready_to_start:1,
                                is_return:1,
                                comment:Blank(),
                                status_sequence_number:ComboBox2.Selected.status_sequence_number
                        }
                    );
                
                    Set(n_LSSTaskPicId,First(
                            Filter(
                                c_Task,
                                assignment_code = n_LSSAssignmentCode,sequence_number = n_BackToSequenceNumber                
                            )
                            ).assigned_pic1_id
                    );
                
                    Patch(tbl_notification_list, Defaults(tbl_notification_list), 
                        {
                            employee_id : n_LSSTaskPicId,
                            notification_preview : "Pekerjaan dengan kode : " & n_LSSAssignmentCode & " telah direview oleh " & First(c_ActiveUserData).name & ". Mohon melakukan pengecekan ulang untuk penugasan tersebut",
                            notification_content : "Pekerjaan dengan kode : " & n_LSSAssignmentCode & " telah direview oleh " & First(c_ActiveUserData).name & ". Mohon melakukan pengecekan ulang untuk penugasan tersebut",
                            notification_date : Now(),
                            is_read : 0
                        });
                
                        '[DEV]AssetMaintenance-SendPushNotification'.Run(First(Filter(c_AllEmployee,ID = n_LSSTaskPicId)).email, "Pekerjaan dengan kode : " & n_LSSAssignmentCode & " telah direview oleh " & First(c_ActiveUserData).name & ". Mohon melakukan pengecekan ulang untuk penugasan tersebut");
                
                    Patch(c_TaskByAssignmentCode,{assignment_code:n_LSSAssignmentCode},{counted_task_for_gm:0});
                
                /*ForAll(
                    c_AssignmentDetail,
                    Patch(tbl_assignment_details,
                        First(Filter(
                            tbl_assignment_details,
                            ID = c_AssignmentDetail[@ID]
                        )),
                        {
                            is_not_ok: 0,
                            is_ok: 0
                        }
                    );   
                   
                );
                
                UpdateIf(c_AssignmentDetail, 1 = 1, 
                    { 
                        is_not_ok: 0,
                        is_ok: 0
                    }
                );*/
                
                
                
                Navigate(scr_TaskScreen);
                
                );
            Size: =24
            Text: ="Ya"
            Visible: =b_LSConfirmationRecheckReport
            Width: =200
            X: =333
            Y: =705
            ZIndex: =18

    btn_LSSStartTime As button:
        Fill: =RGBA(141, 198, 63, 1)
        Height: =75
        OnSelect: |-
            =Set(b_LSStartTask,false);
            Set(dm_LSTask,DisplayMode.Edit);
            
            Patch(tbl_assignment_headers, 
                First(
                    Filter(tbl_assignment_headers, ID = gal_TSTaskList.Selected.ID)
                    ),
                    {start_time_task: Now()}
            );
            
            Patch(c_Task, { ID : gal_TSTaskList.Selected.ID}, 
                {start_time_task: Now()}
            );
        RadiusBottomLeft: =0
        RadiusBottomRight: =0
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Size: =24
        Text: ="Mulai Pekerjaan"
        Visible: |-
            =If(
                gal_TSTaskList.Selected.status_code <> Text(n_WaitingGMApprovalStatus) && gal_TSTaskList.Selected.status_code <> Text(n_ReadyForSale) && gal_TSTaskList.Selected.assigned_pic1_id = First(c_ActiveUserData).ID && b_LSStartTask = true,
                true,
                If(
                    First(c_ActiveUserData).is_approver = 1,
                    false,
                    false
                )
            )
        Width: =581
        X: =27
        Y: =1017
        ZIndex: =25

    grp_ConfirmationApproveReport As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =25

        Rectangle2_2 As rectangle:
            Fill: =RGBA(0, 0, 0, 0.5)
            Height: =1136
            Visible: =b_LSConfirmationApproveReport
            Width: =640
            ZIndex: =19

        Rectangle3_2 As rectangle:
            Fill: =RGBA(255, 255, 255, 1)
            Height: =447
            Visible: =b_LSConfirmationApproveReport
            Width: =535
            X: =51
            Y: =303
            ZIndex: =20

        Label3_2 As label:
            Align: =Align.Center
            FontWeight: =FontWeight.Semibold
            Height: =70
            Size: =21
            Text: ="Mohon Konfirmasi"
            Visible: =b_LSConfirmationApproveReport
            Width: =342
            X: =147
            Y: =338
            ZIndex: =21

        Label4_2 As label:
            Align: =Align.Center
            Height: =119
            Size: =21
            Text: ="Apakah anda yakin untuk menyetujui tugas ini?"
            Visible: =b_LSConfirmationApproveReport
            Width: =427
            X: =106
            Y: =454
            ZIndex: =22

        Button2_5 As button:
            Fill: =RGBA(246, 88, 16, 1)
            Height: =50
            OnSelect: =Set(b_LSConfirmationApproveReport,false);
            Size: =24
            Text: ="Kembali"
            Visible: =b_LSConfirmationApproveReport
            Width: =200
            X: =106
            Y: =641
            ZIndex: =23

        Button2_4 As button:
            Fill: =RGBA(152, 208, 70, 1)
            Height: =50
            OnSelect: |-
                =//Clear(c_AllNextProcessEmployee);
                Set(n_LSCStatusSequenceNumberCurrent,gal_TSTaskList.Selected.status_sequence_number);
                Set(n_LSCStatusSequenceNumberNext,(gal_TSTaskList.Selected.status_sequence_number + 1));
                Set(n_LSSAssignmentCode, gal_TSTaskList_1.Selected.assignment_code);
                
                Clear(c_LSSAllTaskComplete);
                ForAll(Sequence(gal_TSTaskList_1.Selected.counted_task_for_gm),
                    Collect(c_LSSAllTaskComplete,First(Filter(c_Task,assignment_code = n_LSSAssignmentCode,sequence_number = Value)));
                );
                
                ForAll(c_LSSAllTaskComplete,
                
                    Patch(tbl_assignment_headers, First(
                            Filter(
                                tbl_assignment_headers,
                                ID = c_LSSAllTaskComplete[@ID]
                            )
                        ),
                        {
                            status_code: First(Filter(c_AllStatus,status_sequence_number = n_LSCStatusSequenceNumberNext)).status_code,
                            approver_id: First(c_ActiveUserData).ID,
                            approve_date:Now()
                        }
                    );
                
                    Patch(c_Task, { ID : c_LSSAllTaskComplete[@ID]}, 
                    {
                        status_code: First(Filter(c_AllStatus,status_sequence_number = n_LSCStatusSequenceNumberNext)).status_code,
                        status_name: First(Filter(c_AllStatus,status_sequence_number = n_LSCStatusSequenceNumberNext)).status_name,
                        status_color:First(Filter(c_AllStatus,status_sequence_number = n_LSCStatusSequenceNumberNext)).hex_color,
                        approver_id: First(c_ActiveUserData).ID,
                        approve_date:Now()
                    });
                
                    Patch(tbl_notification_list, Defaults(tbl_notification_list), 
                        {
                            employee_id : c_LSSAllTaskComplete[@assigned_pic1_id],
                            notification_preview : "Preventive Maintence Lokasi " & gal_TSTaskList_1.Selected.assignment_code & " telah selesai direview dan disetujui oleh " & First(c_ActiveUserData).name,
                            notification_content : "Preventive Maintence Lokasi " & gal_TSTaskList_1.Selected.assignment_code & " telah selesai direview dan disetujui oleh " & First(c_ActiveUserData).name,
                            notification_date : Now(),
                            is_read : 0
                        }
                    );
                
                    Collect(c_AllProcessEmployee, Filter(c_AllEmployee, department_id = c_LSSAllTaskComplete[@department_id] && IsBlank(spv_id)));
                    
                
                    
                
                    
                );
                
                ForAll(c_AllProcessEmployee,
                     '[DEV]AssetMaintenance-SendPushNotification'.Run(c_AllProcessEmployee[@email], "Preventive Maintence Lokasi " & gal_TSTaskList.Selected.location_name & " telah selesai direview dan disetujui oleh " & First(c_ActiveUserData).name);
                );
                
                
                Navigate(scr_TaskScreen);
                
                //ClearCollect(c_AllProcessEmployee, Filter(c_AllEmployee, department_id = c_AllFlowProcess[@department_id] && IsBlank(spv_id)));
                /*Patch(tbl_assignment_headers, First(
                        Filter(
                            tbl_assignment_headers,
                            ID = gal_TSTaskList.Selected.ID
                        )
                    ),
                    {
                        status_code: First(Filter(c_AllStatus,status_sequence_number = n_LSCStatusSequenceNumberNext)).status_code,
                        approver_id: First(c_ActiveUserData).ID,
                        approve_date:Now()
                    }
                );
                Patch(c_Task, { ID : gal_TSTaskList.Selected.ID}, 
                    {
                        status_code: First(Filter(c_AllStatus,status_sequence_number = n_LSCStatusSequenceNumberNext)).status_code,
                        status_name: First(Filter(c_AllStatus,status_sequence_number = n_LSCStatusSequenceNumberNext)).status_name,
                        status_color:First(Filter(c_AllStatus,status_sequence_number = n_LSCStatusSequenceNumberNext)).hex_color,
                        approver_id: First(c_ActiveUserData).ID,
                        approve_date:Now()
                    }
                );
                
                ForAll(c_AllNextProcessEmployee,
                        Patch(tbl_notification_list, Defaults(tbl_notification_list), 
                        {
                            employee_id : c_AllNextProcessEmployee[@ID],
                            notification_preview : "Preventive Maintence Lokasi " & gal_TSTaskList.Selected.location_name & " telah selesai direview dan disetujui oleh " & First(c_ActiveUserData).name,
                            notification_content : "Preventive Maintence Lokasi " & gal_TSTaskList.Selected.location_name & " telah selesai direview dan disetujui oleh " & First(c_ActiveUserData).name,
                            notification_date : Now(),
                            is_read : 0
                        });
                
                        '[DEV]AssetMaintenance-SendPushNotification'.Run(c_AllNextProcessEmployee[@email], "Preventive Maintence Lokasi " & gal_TSTaskList.Selected.location_name & " telah selesai direview dan disetujui oleh " & First(c_ActiveUserData).name);
                        );
                
                Navigate(scr_TaskScreen);*/
            Size: =24
            Text: ="Ya"
            Visible: =b_LSConfirmationApproveReport
            Width: =200
            X: =333
            Y: =641
            ZIndex: =24

    ComboBox2 As combobox:
        DisplayFields: =["status_name"]
        Height: =68
        IsSearchable: =false
        Items: =Filter(c_AllStatus, status_sequence_number < gal_TSTaskList.Selected.status_sequence_number)
        SearchFields: =["status_name"]
        SearchItems: =[]
        SelectMultiple: =false
        Size: =21
        Tooltip: ="Kembalikan Status"
        Visible: =b_LSConfirmationRecheckReport
        Width: =427
        X: =106
        Y: =589
        ZIndex: =26

    Label5 As label:
        Align: =Align.Center
        Height: =70
        Size: =21
        Text: |-
            =//DateDiff(gal_TSTaskList.Selected.start_time_task,Now(),TimeUnit.Days)
            
            With(
                {
                    days: RoundDown(DateDiff(gal_TSTaskList.Selected.start_time_task, d_LSS_DateNow,TimeUnit.Hours) / 24, 0),
                    hours: Mod(RoundDown(DateDiff(gal_TSTaskList.Selected.start_time_task, d_LSS_DateNow, TimeUnit.Minutes) / 60, 0), 24),
                    minutes: Mod(DateDiff(gal_TSTaskList.Selected.start_time_task, d_LSS_DateNow,TimeUnit.Minutes), 60)
                },
                days & " hari, " & hours & " jam " & minutes & " menit"
            )
        Visible: =b_LSConfirmationSubmitReport
        Width: =298
        X: =168
        Y: =557
        ZIndex: =35

    grp_ReportNotCompleteData As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =35

        Rectangle2_3 As rectangle:
            Fill: =RGBA(0, 0, 0, 0.5)
            Height: =1136
            Visible: =b_PopupNotComplete
            Width: =640
            ZIndex: =29

        Rectangle3_3 As rectangle:
            Fill: =RGBA(255, 255, 255, 1)
            Height: =1054
            Visible: =b_PopupNotComplete
            Width: =535
            X: =51
            Y: =48
            ZIndex: =30

        Label3_3 As label:
            Align: =Align.Center
            FontWeight: =FontWeight.Semibold
            Height: =70
            Size: =21
            Text: ="Periksa Kembali"
            Visible: =b_PopupNotComplete
            Width: =342
            X: =146
            Y: =55
            ZIndex: =31

        Label4_3 As label:
            Align: =Align.Center
            Height: =119
            Size: =21
            Text: |-
                ="Mohon periksa kembali kelengkapan data berikut :"
            Visible: =b_PopupNotComplete
            Width: =427
            X: =106
            Y: =112
            ZIndex: =32

        Button2_6 As button:
            Fill: =RGBA(246, 88, 16, 1)
            Height: =50
            OnSelect: =Set(b_PopupNotComplete, false);
            Size: =24
            Text: ="Kembali"
            Visible: =b_PopupNotComplete
            Width: =200
            X: =220
            Y: =1010
            ZIndex: =33

        "gal_LSSDataNotComplete As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderThickness: =1
            DelayItemLoading: =true
            Height: =754
            Items: =c_ReportDataNotComplete
            Layout: =Layout.Vertical
            LoadingSpinner: =LoadingSpinner.Data
            TemplatePadding: =0
            TemplateSize: =114
            Visible: =b_PopupNotComplete
            Width: =482
            X: =77
            Y: =231
            ZIndex: =34

            Title2 As label:
                FontWeight: =FontWeight.Bold
                Height: =75
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =16
                Text: |-
                    ="Inspection Point : " & ThisItem.amenity_name
                VerticalAlign: =VerticalAlign.Top
                Width: =449
                X: =13
                Y: =6
                ZIndex: =2

            Subtitle1 As label:
                FontWeight: |-
                    =//If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                    FontWeight.Normal
                Height: =35
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =18
                Text: =ThisItem.reason
                VerticalAlign: =VerticalAlign.Top
                Width: =Title2.Width
                X: =Title2.X
                Y: =78
                ZIndex: =3

            Separator2 As rectangle:
                BorderColor: =RGBA(0, 0, 0, 1)
                BorderThickness: =1
                Fill: =RGBA(255, 255, 255, 1)
                Height: =1
                OnSelect: =Select(Parent)
                Width: =Parent.TemplateWidth
                Y: =Parent.TemplateHeight - Self.Height
                ZIndex: =5

    Label6 As label:
        Align: =Align.Center
        Height: =70
        Size: =21
        Text: ="Total Waktu Pengerjaan"
        Visible: =b_LSConfirmationSubmitReport
        Width: =334
        X: =150
        Y: =522
        ZIndex: =36

    grp_LSSHeaderApproval As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =37

        btn_LSSPreviousTask As button:
            Fill: =RGBA(33, 86, 117, 1)
            Height: =50
            OnSelect: |-
                =Set(n_CurrentApprovalTaskRowNumber, n_CurrentApprovalTaskRowNumber - 1); 
                
                ClearCollect(c_TmpSubLocation, Filter(c_AllSublocation, location_type_id = First(Filter(c_CheckingTaskFlow, RowNumber = n_CurrentApprovalTaskRowNumber)).location_type_id && department_id = First(Filter(c_CheckingTaskFlow, RowNumber = n_CurrentApprovalTaskRowNumber)).department_id)); 
                
                //Generate Row Number
                ClearCollect(
                    c_SubLocation,
                    ForAll(
                        Sequence(CountRows(c_TmpSubLocation)),
                        Patch(
                            Last(FirstN(c_TmpSubLocation, Value)),
                            { RowNumber : Value }
                        )
                    )
                );
                Set(n_QtySublocation, CountRows(c_SubLocation));
                Set(n_CurrentSublocationRowNumber, 1);
                
                Clear(c_TmpSubLocation);
                
                Set(n_TmpHeaderID, First(Filter(c_CheckingTaskFlow, RowNumber = n_CurrentApprovalTaskRowNumber)).ID);
                Set(n_TmpDepartmentID, First(Filter(c_CheckingTaskFlow, RowNumber = n_CurrentApprovalTaskRowNumber)).department_id);
                
                If(b_IsApproverByFlow || b_IsViewerUser,
                    ClearCollect(c_TmpAssignmentDetail, Filter(tbl_assignment_details, assignment_header_id = n_TmpHeaderID && department_id = n_TmpDepartmentID));
                ,
                    ClearCollect(c_TmpAssignmentDetail, Filter(tbl_assignment_details, assignment_header_id = gal_TSTaskList.Selected.ID && department_id = gal_TSTaskList.Selected.department_id));
                );
                
                ClearCollect(c_AssignmentDetail, 
                    AddColumns(c_TmpAssignmentDetail, 
                        "amenity_name", First(Filter(c_AllSublocationAmenities, ID = c_TmpAssignmentDetail[@amenity_id])).amenity_name
                    )
                );
                Clear(c_TmpAssignmentDetail);
                
                ClearCollect(c_TmpAssignmentDetailAmenities, Filter(c_AssignmentDetail, sublocation_id = First(Filter(c_SubLocation, RowNumber = n_CurrentSublocationRowNumber)).ID));
                //Generate Row Number
                ClearCollect(
                    c_AssignmentDetailAmenities,
                    ForAll(
                        Sequence(CountRows(c_TmpAssignmentDetailAmenities)),
                        Patch(
                            Last(FirstN(c_TmpAssignmentDetailAmenities, Value)),
                            { RowNumber : Value }
                        )
                    )
                );
                Clear(c_TmpAssignmentDetailAmenities);
                Set(s_SelectedSublocation, First(Filter(c_SubLocation, RowNumber = n_CurrentSublocationRowNumber)).sublocation_name);
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =20
            Text: ="<< Prev"
            Visible: =(!(n_CurrentApprovalTaskRowNumber = 1 || CountRows(c_CheckingTaskFlow) = 0)) && (b_IsApproverByFlow || b_IsViewerUser)
            Width: =180
            X: =39
            Y: =81
            ZIndex: =1

        btn_LSSNextTask As button:
            Fill: =RGBA(33, 86, 117, 1)
            Height: =50
            OnSelect: |
                =If(CountRows(Filter(c_AssignmentDetail, assignment_header_id = n_TmpHeaderID && (IsBlank(is_ok) || is_ok = 0))) > 0,    
                    Set(b_LSNeedRepair, true);  ,
                    Set(b_LSNeedRepair, false);  
                );
                
                
                Set(n_CurrentApprovalTaskRowNumber, n_CurrentApprovalTaskRowNumber + 1); 
                
                ClearCollect(c_TmpSubLocation, Filter(c_AllSublocation, location_type_id = First(Filter(c_CheckingTaskFlow, RowNumber = n_CurrentApprovalTaskRowNumber)).location_type_id && department_id = First(Filter(c_CheckingTaskFlow, RowNumber = n_CurrentApprovalTaskRowNumber)).department_id)); 
                
                //Generate Row Number
                ClearCollect(
                    c_SubLocation,
                    ForAll(
                        Sequence(CountRows(c_TmpSubLocation)),
                        Patch(
                            Last(FirstN(c_TmpSubLocation, Value)),
                            { RowNumber : Value }
                        )
                    )
                );
                Set(n_QtySublocation, CountRows(c_SubLocation));
                Set(n_CurrentSublocationRowNumber, 1);
                
                Clear(c_TmpSubLocation);
                
                Set(n_TmpHeaderID, First(Filter(c_CheckingTaskFlow, RowNumber = n_CurrentApprovalTaskRowNumber)).ID);
                Set(n_TmpDepartmentID, First(Filter(c_CheckingTaskFlow, RowNumber = n_CurrentApprovalTaskRowNumber)).department_id);
                
                If(b_IsApproverByFlow || b_IsViewerUser,
                    ClearCollect(c_TmpAssignmentDetail, Filter(tbl_assignment_details, assignment_header_id = n_TmpHeaderID && department_id = n_TmpDepartmentID));
                ,
                    ClearCollect(c_TmpAssignmentDetail, Filter(tbl_assignment_details, assignment_header_id = gal_TSTaskList.Selected.ID && department_id = gal_TSTaskList.Selected.department_id));
                );
                
                ClearCollect(c_AssignmentDetail, 
                    AddColumns(c_TmpAssignmentDetail, 
                        "amenity_name", First(Filter(c_AllSublocationAmenities, ID = c_TmpAssignmentDetail[@amenity_id])).amenity_name
                    )
                );
                Clear(c_TmpAssignmentDetail);
                
                ClearCollect(c_TmpAssignmentDetailAmenities, Filter(c_AssignmentDetail, sublocation_id = First(Filter(c_SubLocation, RowNumber = n_CurrentSublocationRowNumber)).ID));
                //Generate Row Number
                ClearCollect(
                    c_AssignmentDetailAmenities,
                    ForAll(
                        Sequence(CountRows(c_TmpAssignmentDetailAmenities)),
                        Patch(
                            Last(FirstN(c_TmpAssignmentDetailAmenities, Value)),
                            { RowNumber : Value }
                        )
                    )
                );
                Clear(c_TmpAssignmentDetailAmenities);
                
                Set(s_SelectedSublocation, First(Filter(c_SubLocation, RowNumber = n_CurrentSublocationRowNumber)).sublocation_name);
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =20
            Text: ="Next >>"
            Visible: =(!(n_CurrentApprovalTaskRowNumber = CountRows(c_CheckingTaskFlow)) && CountRows(c_CheckingTaskFlow) > 0) && (b_IsApproverByFlow || b_IsViewerUser)
            Width: =180
            X: =419
            Y: =81
            ZIndex: =27

        lbl_LSSDivision As label:
            Align: =Align.Center
            FontWeight: =FontWeight.Bold
            Height: =50
            Size: =18
            Text: =First(Filter(c_CheckingTaskFlow, RowNumber = n_CurrentApprovalTaskRowNumber)).department_name
            Visible: =b_IsApproverByFlow || b_IsViewerUser
            Width: =200
            X: =219
            Y: =81
            ZIndex: =28

